package wang.wangxinarhat.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import wang.wangxinarhat.dao.CityInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CITY_INFO".
*/
public class CityInfoDao extends AbstractDao<CityInfo, Long> {

    public static final String TABLENAME = "CITY_INFO";

    /**
     * Properties of entity CityInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property City_id = new Property(1, String.class, "city_id", false, "CITY_ID");
        public final static Property City_spell_zh = new Property(2, String.class, "city_spell_zh", false, "CITY_SPELL_ZH");
        public final static Property City_area = new Property(3, String.class, "city_area", false, "CITY_AREA");
        public final static Property City_town = new Property(4, String.class, "city_town", false, "CITY_TOWN");
        public final static Property City_province = new Property(5, String.class, "city_province", false, "CITY_PROVINCE");
    };


    public CityInfoDao(DaoConfig config) {
        super(config);
    }
    
    public CityInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CITY_INFO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"CITY_ID\" TEXT NOT NULL ," + // 1: city_id
                "\"CITY_SPELL_ZH\" TEXT," + // 2: city_spell_zh
                "\"CITY_AREA\" TEXT," + // 3: city_area
                "\"CITY_TOWN\" TEXT," + // 4: city_town
                "\"CITY_PROVINCE\" TEXT);"); // 5: city_province
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CITY_INFO\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, CityInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getCity_id());
 
        String city_spell_zh = entity.getCity_spell_zh();
        if (city_spell_zh != null) {
            stmt.bindString(3, city_spell_zh);
        }
 
        String city_area = entity.getCity_area();
        if (city_area != null) {
            stmt.bindString(4, city_area);
        }
 
        String city_town = entity.getCity_town();
        if (city_town != null) {
            stmt.bindString(5, city_town);
        }
 
        String city_province = entity.getCity_province();
        if (city_province != null) {
            stmt.bindString(6, city_province);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public CityInfo readEntity(Cursor cursor, int offset) {
        CityInfo entity = new CityInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // city_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // city_spell_zh
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // city_area
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // city_town
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // city_province
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, CityInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCity_id(cursor.getString(offset + 1));
        entity.setCity_spell_zh(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCity_area(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCity_town(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCity_province(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(CityInfo entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(CityInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
